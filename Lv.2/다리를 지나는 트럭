using System;
using System.Collections.Generic;
public class Solution {
    public int solution(int bridge_length, int weight, int[] truck_weights) {
        int answer = 0;
        
        // <값, 시간>
        Queue<Tuple<int, int>> beforeQueue = new Queue<Tuple<int, int>>();

        // 통과한 트럭 수
        int passCount = 0;

        // 다음에 지나갈 트럭
        int pointer = 0;

        // 현재 다리가 버티는 무게
        int currentWeight = 0;


        while(true){
            answer++;

            // 다리를 지나간 시점으로부터 다리의 길이만큼 지났다면 트럭을 지나간 것으로 처리
            if(beforeQueue.Count > 0 && answer == beforeQueue.Peek().Item2 + bridge_length){
                currentWeight -= beforeQueue.Peek().Item1;
                beforeQueue.Dequeue();
                passCount++;
            }
            
            // 다음 트럭이 들어올 때 다리가 버티는 무게에 해당하면 지나가도록 처리
            if(pointer < truck_weights.Length && currentWeight + truck_weights[pointer] <= weight){
                beforeQueue.Enqueue(new Tuple<int, int>(truck_weights[pointer], answer));
                currentWeight += truck_weights[pointer];
                pointer++;
            }
            
            // 모든 트럭이 지나갔다면 반복문 종료
            if(passCount == truck_weights.Length){
                break;
            }
            
        }
        return answer;
    }
}
