using System;

public class Solution {
    public int[] solution(int[] sequence, int k) {
        int[] answer = new int[2];
        
        int sum = 0;  //부분 수열 합
        int length = 10000000; //부분 수열 길이
        
        int start = 0; //부분 수열 시작 인덱스
        int end = 0;  //부분 수열 끝 인덱스
        
        while(true){
            if(start == end){ //초기값 설정 및 같은 인덱스를 가리키면 하나의 값만 배정
                sum = sequence[start];
            }
            
            if(sum == k){  //부분 합이 k보다 크거나 작고 같은 경우의 조건문
                //부분 수열 합이 k라면 기본적으로 시작 포인터와 끝 포인터를 전진시킨다.
                //또한 부분 수열 길이가 기존보다 짧다면 새로운 부분 수열을 배정한다.
                if(end-start < length){  
                    answer[0] = start;
                    answer[1] = end;
                    length = end-start;
                    
                    if(length == 0){
                        break;
                    } 
                }
                sum -= sequence[start++];
                if(end < sequence.Length-1){
                    sum += sequence[end + 1];
                }
                end++;
            } else if(sum > k){ //부분 수열 합이 k보다 크면 시작 인덱스를 전진시킨다
                sum -= sequence[start++];
            } else if(sum < k){ //부분 수열 합이 k보다 작으면 끝 인덱스의 위치를 검사한 뒤 전진시킨다.
                if(end < sequence.Length-1){
                    sum += sequence[end + 1];
                }
                end++;
            }
            
            if(end >= sequence.Length){ //끝 인덱스를 전진했을 때 배열의 범위를 벗어나면 반복문 종료
                break;
            }
        }
        
        return answer;
    }
}
