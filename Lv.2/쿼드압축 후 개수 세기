using System;

public class Solution {
    int[] answer;
    public int[] solution(int[,] arr) {
        answer = new int[2];
        
        //초기값: <입력 배열, 배열 길이, 시작 행: 0, 시작 열: 0>
        Divide(arr, arr.GetLength(0), 0, 0);
        return answer;
    }
    
    void Divide(int[,] arr, int length, int row, int col){
        //사각형 한 변의 길이가 1이상인 경우
        if(length > 0){

            //해당 사각형에 포함된 원솟값을 모두 더한다
            int sum = 0;
            for(int i = 0; i < length; i++){
                for(int j = 0; j < length; j++){
                    sum += arr[row+i, col+j];
                }
            }
            
            //이후 sum의 결과가 0 또는 1이라면 압축된 수를 1 더해주고
            //sum의 결과가 그 외라면 4개의 사각형으로 다시 분할한다
            //이 때, 각 사각형의 길이를 1/2, 시작 인덱스를 각 사각형의 좌측상단으로 설정
            if(sum == length*length){
                answer[1]++;
            } else if(sum == 0){
                answer[0]++;
            } else {
                Divide(arr, length/2, row, col);
                Divide(arr, length/2, row+length/2, col);
                Divide(arr, length/2, row, col+length/2);
                Divide(arr, length/2, row+length/2, col+length/2);
            }
        }
    }
}
