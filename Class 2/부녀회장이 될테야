using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Runtime.InteropServices;
using System.Text;

class Program
{
    static void Main(string[] args)
    {
        StreamReader reader = new StreamReader(new BufferedStream(Console.OpenStandardInput()));
        StreamWriter writer = new StreamWriter(new BufferedStream(Console.OpenStandardOutput()));
        StringBuilder sb = new StringBuilder();

        //테스트 케이스의 수
        int testCase = int.Parse(reader.ReadLine());

        //각 층과 호에 거주하는 인원수를 저장하는 2차원 배열
        int[,] popMatrix = new int[15, 15];

        //0층 i호에 대한 초기값 설정
        for(int i = 1; i < 15; i++)
        {
            popMatrix[0, i] = i;
        }

        //1층 이상의 층수부터는 아랫층의 1호부터 j호까지의 합계를 저장
        for(int i = 1; i < popMatrix.GetLength(0); i++)
        {
            for(int j = 1; j < popMatrix.GetLength(1); j++) {
                for(int k = 1; k <= j; k++)
                {
                    popMatrix[i, j] += popMatrix[i - 1, k];
                }
            }
        }

        //이후 테스트 케이스를 반복하며 k층 n호의 거주 인원수를 출력
        for(int i = 0; i < testCase; i++)
        {
            int k = int.Parse(reader.ReadLine());
            int n = int.Parse(reader.ReadLine());

            writer.WriteLine(popMatrix[k, n].ToString());
        }

        reader.Close();
        writer.Close();
    }
}
