using System;
using System.Collections.Generic;
using System.Text;

class Program
{

    static void Main(string[] args)
    {
        StreamReader reader = new StreamReader(new BufferedStream(Console.OpenStandardInput()));
        StreamWriter writer = new StreamWriter(new BufferedStream(Console.OpenStandardOutput()));

        //목표 채널
        string n = reader.ReadLine();

        //고장난 버튼의 개수
        int m = int.Parse(reader.ReadLine());

        //bool 배열을 사용해 고장난 버튼을 기록
        bool[] isbreak = new bool[10];

        //readline 메소드를 처리하기 위해 고장난 버튼이 1개 이상인 경우에만 실행
        if (m > 0)
        {
            string temp = reader.ReadLine();
            string[] numbers = temp.Split();

            //고장난 버튼 저장
            for (int i = 0; i < m; i++)
            {
                isbreak[int.Parse(numbers[i])] = true;
            }
        }

        //시작 채널
        int curChannel = 100;

        //시작 채널에서 +, - 버튼만을 사용해 목표 채널에 도달하기 위한 버튼 클릭 수 저장
        int result = Math.Abs(int.Parse(n) - curChannel);

        //0부터 100만까지 반복
        for(int i = 0; i < 1000000; i++)
        {
            //먼저 숫자 버튼만으로 이동 가능한 채널인지 검사
            if (IsPossibleNum(i, isbreak))
            {
                //이동 가능하다면 해당 채널의 자릿수와 해당 채널과 목표 채널의 차를 합하고
                //최소 버튼 클릭 횟수를 갱신
                result = Math.Min(result, Math.Abs(int.Parse(n) - i) + GetDigitCount(i));
            }
        }

        //최소 버튼 클릭 횟수 출력
        writer.Write(result);

        reader.Close();
        writer.Close();

    }

    //숫자 버튼만으로 이동 가능한 채널인지 검사하는 함수
    static bool IsPossibleNum(int num, bool[] isbreak)
    {
        //입력 정수를 문자열로 변환
        string temp = num.ToString();

        //각 자릿값이 고장난 버튼인지 검사하고 하나라도 고장난 버튼을 사용한다면 false 반환
        for(int i = 0; i < temp.Length; i++)
        {
            if (isbreak[temp[i] - '0'])
            {
                return false;
            }
        }

        //모든 버튼이 고장난 버튼을 사용하지 않는다면 true 반환
        return true;
    }

    //자릿수 반환 함수
    static int GetDigitCount(int num)
    {
        //문자열로 변환한 뒤 길이를 반환
        return num.ToString().Length;
    }
}
