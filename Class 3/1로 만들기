using System;
using System.Collections.Generic;
using System.Text;

class Program
{
    static void Main(string[] args)
    {
        StreamReader reader = new StreamReader(new BufferedStream(Console.OpenStandardInput()));
        StreamWriter writer = new StreamWriter(new BufferedStream(Console.OpenStandardOutput()));

        int n = int.Parse(reader.ReadLine());

        //<현재 값, 연산 횟수>
        Queue<Tuple<int, int>> queue = new Queue<Tuple<int, int>>();

        //초기값으로 n 입력
        queue.Enqueue(new Tuple<int, int>(n, 0));

        //너비 우선 탐색
        while(queue.Count > 0)
        {
            //현재 정보
            Tuple<int, int> curInfo = queue.Dequeue();

            //현재 값이 1이라면 연산 횟수를 출력 후 탐색 종료
            if(curInfo.Item1 == 1)
            {
                writer.Write(curInfo.Item2);
                break;
            }

            //3으로 나눌 수 있다면 3으로 나눈 값을 큐에 저장
            if(curInfo.Item1 % 3 == 0)
            {
                queue.Enqueue(new Tuple<int, int>(curInfo.Item1 / 3, curInfo.Item2 + 1));
            }

            //2로 나눌 수 있다면 2로 나눈 값을 큐에 저장
            if (curInfo.Item1 % 2 == 0)
            {
                queue.Enqueue(new Tuple<int, int>(curInfo.Item1 / 2, curInfo.Item2 + 1));
            }

            //현재 값에서 1 감소시킨 값을 큐에 저장
            queue.Enqueue(new Tuple<int, int>(curInfo.Item1 - 1, curInfo.Item2 + 1));

        }

        
        reader.Close();
        writer.Close();

    }
}
