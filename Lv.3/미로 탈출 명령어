using System;
using System.Text;

public class Solution {
    public string solution(int n, int m, int x, int y, int r, int c, int k) {
        string answer = "";
        
        //문자열을 추가하는 연산이 많아 StringBuilder 사용
        StringBuilder sb = new StringBuilder();
        
        //k번으로 목적지까지 닿을 수 없는 경우
        if((Math.Abs(r-x) + Math.Abs(c-y) > k)){
            return "impossible";
        }
        
        //목적지에 도착한 뒤 이동 가능한 거리가 2의 배수로 되지 않는 경우
        if((Math.Abs(r-x) + Math.Abs(c-y)) % 2 != k % 2){
            return "impossible";
        }
        
        //k번 만큼 이동할 때까지 반복
        while(k > 0){

            //1. 미로의 범위를 벗어나지 않음
            //2. 이동했을 때 목적지와의 맨하튼 거리보다 k가 크거나 같음
            //1,2번을 만족하는 경로 중 사전 순으로 가장 빠른 경로로 이동
            if(x+1 <= n && (Math.Abs(x+1 - r) + Math.Abs(y - c)) <= k-1){
                x++;
                sb.Append('d');
            } else if(y-1 > 0 && (Math.Abs(x - r) + Math.Abs(y - 1 - c)) <= k-1){
                y--;
                sb.Append('l');
            } else if(y+1 <= m && (Math.Abs(x - r) + Math.Abs(y + 1 - c)) <= k-1){
                y++;
                sb.Append('r');
            } else {
                x--;
                sb.Append('u');
            }
            k--;
        }
        
        answer = sb.ToString();
        
        return answer;
    }
}
